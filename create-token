create token - java code: 'createToken' method is used to create token, 'getUserIdFromToken' method is used to get user id from token.

import com.nimbusds.jose.JOSEException;
import com.nimbusds.jose.JWSAlgorithm;
import com.nimbusds.jose.JWSHeader;
import com.nimbusds.jose.JWSObject;
import com.nimbusds.jose.JWSSigner;
import com.nimbusds.jose.JWSVerifier;
import com.nimbusds.jose.Payload;
import com.nimbusds.jose.crypto.MACSigner;
import com.nimbusds.jose.crypto.MACVerifier;
import com.nimbusds.jwt.JWTClaimsSet;
import com.nimbusds.jwt.SignedJWT;

public static String createToken(String userId, long expirationDate) {
        try {
            JWTClaimsSet.Builder builder = new JWTClaimsSet.Builder();
            builder.claim(Constants.USER_ONLY_TAG, userId); //唯一标识 可根据此标识获取userId
            builder.issuer(TOKEN_ISSUER); //随便定义
            builder.subject(userId);
            builder.issueTime(new Date());
            builder.notBeforeTime(new Date());
            builder.expirationTime(new Date(System.currentTimeMillis() + expirationDate));
            builder.jwtID(UUID.randomUUID().toString());

            JWTClaimsSet claimsSet = builder.build();
            JWSHeader header = new JWSHeader(JWSAlgorithm.HS256);

            Payload payload = new Payload(claimsSet.toJSONObject());

            JWSObject jwsObject = new JWSObject(header, payload);

            JWSSigner signer = new MACSigner(TOKEN_KEY.getBytes());//随意长度字符串
            jwsObject.sign(signer);

            return jwsObject.serialize();
        } catch (JOSEException e) {
            logger.error("create token occur exception : {} ", e.getMessage());
            return null;
        }
    }
    
    public static String getUserIdFromToken(String token) {
        try {
            SignedJWT jwt = SignedJWT.parse(token);
            JWSVerifier verifier = new MACVerifier(TOKEN_KEY.getBytes());

            //校验是否有效
            if (!jwt.verify(verifier)) {
                logger.error("invalid token!");
                return null;
            }

            //校验超时
            Date expirationTime = jwt.getJWTClaimsSet().getExpirationTime();
            if (new Date().after(expirationTime)) {
                logger.error("token has been expired!");
                return null;
            }

            //获取载体中的数据
            Object account = jwt.getJWTClaimsSet().getClaim(Constants.USER_ONLY_TAG);
            //是否有账户信息
            if (Objects.isNull(account)){
                logger.error("get user from token not exist!");
                return null;
            }
            return account.toString();
        } catch (Exception e) {
            logger.error("parse token occur exception : {}", e.getMessage());
        }
        return null;
    }
    
    dependency：
    <dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>4.26.1</version>
		</dependency>
